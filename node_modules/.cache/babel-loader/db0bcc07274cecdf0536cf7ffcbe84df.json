{"ast":null,"code":"import _slicedToArray from\"/Users/vivekchowdary/My_World/Authentication/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useRef,useContext}from\"react\";import{useHistory}from\"react-router-dom\";import AuthContext from\"../../store/auth-context\";import classes from\"./AuthForm.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AuthForm=function AuthForm(){var history=useHistory();var emailInputRef=useRef();var passwordInputRef=useRef();var authCtx=useContext(AuthContext);var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLogin=_useState2[0],setIsLogin=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var switchAuthModeHandler=function switchAuthModeHandler(){setIsLogin(function(prevState){return!prevState;});};var submitHandler=function submitHandler(event){event.preventDefault();var enteredEmail=emailInputRef.current.value;var enteredPassword=passwordInputRef.current.value;// optional: Add validation\nsetIsLoading(true);var url;if(isLogin){url=\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAEeV1VDfgOg4SmI3EFZEBQuWFxoaKw0H4\";}else{url=\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAEeV1VDfgOg4SmI3EFZEBQuWFxoaKw0H4\";}fetch(url,{method:\"POST\",body:JSON.stringify({email:enteredEmail,password:enteredPassword,returnSecureToken:true}),headers:{\"Content-Type\":\"application/json\"}}).then(function(res){setIsLoading(false);if(res.ok){return res.json();}else{return res.json().then(function(data){var errorMessage=\"Authentication failed!\";// if (data && data.error && data.error.message) {\n//   errorMessage = data.error.message;\n// }\nthrow new Error(errorMessage);});}}).then(function(data){var expirationTime=new Date(new Date().getTime()+ +data.expiresIn*1000);authCtx.login(data.idToken,expirationTime.toISOString());history.replace(\"/\");}).catch(function(err){alert(err.message);});};return/*#__PURE__*/_jsxs(\"section\",{className:classes.auth,children:[/*#__PURE__*/_jsx(\"h1\",{children:isLogin?\"Login\":\"Sign Up\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Your Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",required:true,ref:emailInputRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Your Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",required:true,ref:passwordInputRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[!isLoading&&/*#__PURE__*/_jsx(\"button\",{children:isLogin?\"Login\":\"Create Account\"}),isLoading&&/*#__PURE__*/_jsx(\"p\",{children:\"Sending request...\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:classes.toggle,onClick:switchAuthModeHandler,children:isLogin?\"Create new account\":\"Login with existing account\"})]})]})]});};export default AuthForm;","map":{"version":3,"sources":["/Users/vivekchowdary/My_World/Authentication/src/components/Auth/AuthForm.js"],"names":["useState","useRef","useContext","useHistory","AuthContext","classes","AuthForm","history","emailInputRef","passwordInputRef","authCtx","isLogin","setIsLogin","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","expirationTime","Date","getTime","expiresIn","login","idToken","toISOString","replace","catch","err","alert","message","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const history = useHistory();\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional: Add validation\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAEeV1VDfgOg4SmI3EFZEBQuWFxoaKw0H4\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAEeV1VDfgOg4SmI3EFZEBQuWFxoaKw0H4\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = \"Authentication failed!\";\n            // if (data && data.error && data.error.message) {\n            //   errorMessage = data.error.message;\n            // }\n\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + +data.expiresIn * 1000\n        );\n        authCtx.login(data.idToken, expirationTime.toISOString());\n        history.replace(\"/\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Sending request...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}